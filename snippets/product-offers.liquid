{{ 'product-offers.css' | asset_url | stylesheet_tag: media: 'screen' }}

{% assign product_offers = product.metafields.custom.product_offers.value %}

{% if product_offers %}
  <div class="offers_for_you_accordian" {{ block.shopify_attributes }}>
    <div class="offers_accordian_tab active">
      <h2 class="h4 accordion__title inline-richtext">{{ offerHeading }}</h2>
      {% render 'icon-caret' %}
    </div>
    <div class="offers_accordian_content">
      <div class="swiper offers_for_accordian_swiper">
        <div class="swiper-wrapper">
          {% for offer in product_offers %}
            {% assign offer_content = offer.product_offers_content.value %}
            {% assign offer_code = offer.product_offers_code.value %}
            <div class="swiper-slide">
              <div class="offers-card">
                <p class="discount-name copyText1">{{ offer_content }}</p>
                <div class="offers1-div">
                  <div class="centralize copy">
                    <p class="copy_offer_btn">{{ offer_code }}</p>
                    <div onclick="copyOfferToClipboard('{{ offer_code }}',event)" style="line-height: 0px;">
                      <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                        <g clip-path="url(#clip0_272_7)">
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M5.5 2.75C5.5 2.02065 5.78973 1.32118 6.30546 0.805456C6.82118 0.289731 7.52065 0 8.25 0L19.25 0C19.9793 0 20.6788 0.289731 21.1945 0.805456C21.7103 1.32118 22 2.02065 22 2.75V13.75C22 14.4793 21.7103 15.1788 21.1945 15.6945C20.6788 16.2103 19.9793 16.5 19.25 16.5H8.25C7.52065 16.5 6.82118 16.2103 6.30546 15.6945C5.78973 15.1788 5.5 14.4793 5.5 13.75V2.75ZM8.25 1.375C7.88533 1.375 7.53559 1.51987 7.27773 1.77773C7.01987 2.03559 6.875 2.38533 6.875 2.75V13.75C6.875 14.1147 7.01987 14.4644 7.27773 14.7223C7.53559 14.9801 7.88533 15.125 8.25 15.125H19.25C19.6147 15.125 19.9644 14.9801 20.2223 14.7223C20.4801 14.4644 20.625 14.1147 20.625 13.75V2.75C20.625 2.38533 20.4801 2.03559 20.2223 1.77773C19.9644 1.51987 19.6147 1.375 19.25 1.375H8.25ZM2.75 6.875C2.38533 6.875 2.03559 7.01987 1.77773 7.27773C1.51987 7.53559 1.375 7.88533 1.375 8.25V19.25C1.375 19.6147 1.51987 19.9644 1.77773 20.2223C2.03559 20.4801 2.38533 20.625 2.75 20.625H13.75C14.1147 20.625 14.4644 20.4801 14.7223 20.2223C14.9801 19.9644 15.125 19.6147 15.125 19.25V17.875H16.5V19.25C16.5 19.9793 16.2103 20.6788 15.6945 21.1945C15.1788 21.7103 14.4793 22 13.75 22H2.75C2.02065 22 1.32118 21.7103 0.805456 21.1945C0.289731 20.6788 0 19.9793 0 19.25V8.25C0 7.52065 0.289731 6.82118 0.805456 6.30546C1.32118 5.78973 2.02065 5.5 2.75 5.5H4.125V6.875H2.75Z" fill="#62032C"/>
                        </g>
                        <defs>
                          <clipPath id="clip0_272_7">
                            <rect width="22" height="22" fill="white"/>
                          </clipPath>
                        </defs>
                      </svg>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
{% endif %}

{% if product_offers %}
  <script>
    // Select elements
    const accordianTabs = document.querySelectorAll('.offers_accordian_tab');
    const accordianContents = document.querySelectorAll('.offers_accordian_content');

    // Set initial state
    document.querySelector('.offers_accordian_content').style.maxHeight = '1000px';

    // Attach click event listeners to accordian tabs
    for (const tab of accordianTabs) {
      tab.addEventListener('click', () => toggleAccordian(tab));
    }

    // Toggle accordian panel
    function toggleAccordian(tab) {
      if (tab.nextElementSibling.style.maxHeight) {
        hideAccordianContents();
      } else {
        showAccordianContent(tab);
      }
    }

    // Show accordian content
    function showAccordianContent(tab) {
      hideAccordianContents();
      tab.classList.add('active');
      tab.nextElementSibling.style.maxHeight = tab.nextElementSibling.scrollHeight + 'px';
    }

    // Hide all accordian contents
    function hideAccordianContents() {
      for (const content of accordianContents) {
        content.style.maxHeight = null;
      }
      for (const tab of accordianTabs) {
        tab.classList.remove('active');
      }
    }

    // Initialize Swiper
    window.addEventListener(
      'DOMContentLoaded',
      () => {
        const offersSwiper = new Swiper('.offers_for_accordian_swiper', {
          slidesPerView: 'auto',
          spaceBetween: 10,
          breakpoints: {
            750: {
              slidesPerView: 'auto',
              spaceBetween: 12,
            },
          },
        });
      },
      { once: true }
    );

    // Copy offer code to clipboard
    function copyOfferToClipboard(text, event) {
      const copyButton = event.target.closest('.centralize.copy').querySelector('p.copy_offer_btn');
      copyButton.classList.add('copied');
      copyButton.innerText = 'COPIED';

      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();

      try {
        document.execCommand('copy');
        setTimeout(() => {
          copyButton.classList.remove('copied');
          copyButton.innerText = text;
        }, 3000);
      } catch (err) {
        console.error('Unable to copy text to clipboard: ' + err);
      }

      document.body.removeChild(textArea);
    }
  </script>
{% endif %}
